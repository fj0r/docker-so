prefix: /usr/local
components:
    git:
        apt: [git]
    http-client:
        apt: [curl, ca-certificates]
    net-utils:
        apt: [rsync, tcpdump, socat]
        # components
        deps: [network]
        build-deps: []
    websocket:
        http:
        - name: websocat
          version:
              type: github
              repo: vi/websocat
              extract:
              - from-json: null
              - index: tag_name
          install:
            - url: https://github.com/vi/websocat/releases/download/{{version}}/websocat.x86_64-unknown-linux-musl
              target: /bin
              rename: websocat
    network:
        apt: [lsof, inetutils-ping, iproute2, iptables, net-tools]
    sys:
        apt: [sudo, procps, htop, cron, tzdata]
    security:
        apt: [openssl]
    utils:
        apt: [sqlite3, jq, patch, tree, logrotate]
        http:
        - name: rg
          version:
              type: github
              repo: BurntSushi/ripgrep
              extract:
              - from-json: null
              - index: tag_name
          install:
            - url: https://github.com/BurntSushi/ripgrep/releases/latest/download/ripgrep-{{version}}-x86_64-unknown-linux-musl.tar.gz
              target: /bin
              strip: 1
              filter:
              - '*/rg'
        - name: fd
          version:
              type: github
              repo: sharkdp/fd
              extract:
              - from-json: null
              - index: tag_name
          install:
            - url: https://github.com/sharkdp/fd/releases/latest/download/fd-{{version}}-x86_64-unknown-linux-musl.tar.gz
              target: /bin
              strip: 1
              filter:
              - '*/fd'
    disk:
        http:
        - name: dust
          version:
              type: github
              repo: bootandy/dust
              extract:
              - from-json: null
              - index: tag_name
          install:
            - url: https://github.com/bootandy/dust/releases/latest/download/dust-{{version}}-x86_64-unknown-linux-musl.tar.gz
              target: /bin
              strip: 1
              filter:
              - '*/dust'
    compress:
        apt: [xz-utils, zstd, zip, unzip]
    tunnel:
        http:
        - name: wstunnel
          version:
              type: github
              repo: erebe/wstunnel
              extract:
              - from-json: null
              - index: tag_name
              - only-nums: null
          install:
            - url: https://github.com/erebe/wstunnel/releases/download/v{{version}}/wstunnel_{{version}}_linux_amd64.tar.gz
              target: /bin
              rename: wstunnel
    quickjs:
        http:
        - name: quickjs
          version:
              type: html
              url: https://bellard.org/quickjs/
              extract:
              - regexp: 'href="quickjs-([0-9\-]+).tar.xz"'
          install:
            - url: https://bellard.org/quickjs/binary_releases/quickjs-linux-x86_64-{{version}}.zip
              target: /bin
              filter:
              - qjs
    neovim:
        http:
        - name: neovim
          version:
              type: github
              repo: 'neovim/neovim'
              extract:
              - from-json: null
              - index: name
              - only-nums: null
          install:
            - url: https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz
              filename: nvim-{{version}}-linux64.tar.gz
              strip: 1
              target: /

    neovim-config:
        deps: [git]
        flow:
        - pipeline:
          - type: git
            url: https://github.com/fj0r/nvim-lua.git
            dist: /etc/nvim
          - type: cmd
            cmd:
            - nvim --headless "+Lazy! sync" +qa
    nushell-config:
        deps: [git]
        flow:
        - pipeline:
          - type: git
            url: https://github.com/fj0r/nushell.git
            dist: /etc/nushell
          - type: cmd
            cmd:
            - echo '/usr/local/bin/nu' | save -a /etc/shells
    python:
        apt: [python3, python3-pip]
    nodejs:
        http:
        - name: nodejs
          version:
              url: https://nodejs.org/dist/index.json
              extract:
              - from-json: null
              - lts: null
              - index: version
          install:
            - url: https://nodejs.org/dist/{{version}}/node-{{version}}-linux-x64.tar.xz
              target: /
              strip: 1
    ls_node:
        deps: [nodejs]
        npm:
            pkgs:
            - '@typespec/compiler'
            - '@typespec/json-schema'
            - quicktype
            - pyright
            - vscode-langservers-extracted
            - yaml-language-server
    python-dev:
        deps: [python]
        pip:
            pkgs:
            - debugpy
            - pytest
            - pydantic
            - PyParsing
            - ipython
            - typer
            - pydantic-settings
            - pyyaml
            - boltons
            - decorator
            - deepmerge
            - structlog
            - python-json-logger
    python-http:
        deps: [python, python-dev]
        pip:
            pkgs:
            - httpx
            - aiofile
            - aiostream
            - fastapi
            - uvicorn
    sscache:
        http:
        - name: sscache
          version:
              type: github
              repo: mozilla/sccache
              extract:
              - from-json: null
              - index: tag_name
          install:
            - url: https://github.com/mozilla/sccache/releases/download/{{version}}/sccache-dist-{{version}}-x86_64-unknown-linux-musl.tar.gz
              target: /bin
              strip: 1
              filter:
              - '*/sccache-dist'
            - url: https://github.com/mozilla/sccache/releases/download/{{version}}/sccache-{{version}}-x86_64-unknown-linux-musl.tar.gz
              target: /bin
              strip: 1
              filter:
              - '*/sccache'
    rust-core:
        apt: [pkg-config, libssl-dev, lldb, libxml2, musl, musl-dev, musl-tools]
        deps: [sscache]
        flow:
        - pipeline:
          - type: cmd
            cmd:
            - curl --retry 3 -sSL https://sh.rustup.rs | sh -s -- --default-toolchain ${RUST_CHANNEL} -y --no-modify-path
            - rustup component add rust-src clippy rustfmt
            - rustup component add rust-analyzer
            - rustup target add x86_64-unknown-linux-musl
            - rustup target add wasm32-wasip1 wasm32-wasip2 wasm32-unknown-unknown
    rust:
        deps: [rust-core]
        cargo:
            pkgs:
            - rust-script
            - cargo-wasi
            - cargo-watch
            - cargo-expand
            - cargo-eval
            - cargo-tree
            - cargo-feature
            - cargo-prefetch
            - cargo-generate
    rust-fe:
        deps: [rust]
        cargo:
            pkgs:
            #- dioxus-cli
            - cargo-leptos

    bootstrap:
        shell:
        - name: bootstrap




layers:
    test-deps:
    - net-utils
    bootstrap:
    - bootstrap
    nushell-config:
    - nushell-config
    neovim:
    - neovim
    neovim-config:
    - neovim-config
    neovim-full:
    - neovim
    - neovim-config
    dev:
    - ls_node
    - python-http
    rust:
    - rust-fe
    base:
    - http-client
    - net-utils
    - websocket
    - network
    - sys
    - security
    - utils
    - disk
    - compress
    - tunnel
    - quickjs

